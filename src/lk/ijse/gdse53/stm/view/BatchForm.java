/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.gdse53.stm.view;

import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import lk.ijse.gdse53.stm.controller.BatchFormController;
import lk.ijse.gdse53.stm.model.Batch;

/**
 *
 * @author Yashitha Nadiranga
 */
public class BatchForm extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddStudentForm
     */
    private String bid;
    String privilege;

    public BatchForm(String privilege) {
        initComponents();
        setUI();
        tableLoad();
        batchCount();
        selectCid();
        addBid();
        addBno();
        this.privilege = privilege;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel2 = new javax.swing.JLabel();
        lblTotalbatch = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBatch = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtbno = new javax.swing.JTextField();
        txtbid = new javax.swing.JTextField();
        cmbCID = new javax.swing.JComboBox<>();
        btnsubmit = new keeptoo.KButton();
        btndelete = new keeptoo.KButton();
        btnupdate = new keeptoo.KButton();

        setBackground(new java.awt.Color(53, 63, 89));
        setBorder(null);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setFrameIcon(null);

        jPanel1.setBackground(new java.awt.Color(53, 63, 89));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setBackground(new java.awt.Color(53, 63, 89));
        kGradientPanel1.setkBorderRadius(20);
        kGradientPanel1.setkEndColor(new java.awt.Color(11, 182, 83));
        kGradientPanel1.setkStartColor(new java.awt.Color(11, 182, 83));

        jLabel2.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Total Batches");

        lblTotalbatch.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        lblTotalbatch.setForeground(new java.awt.Color(255, 255, 255));
        lblTotalbatch.setText("0");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(lblTotalbatch)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(lblTotalbatch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jPanel1.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 50, 150, 91));

        jLabel10.setFont(new java.awt.Font("Poppins Medium", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Batch Details");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        tblBatch.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tblBatch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Batch ID", "Batch NO", "Course ID"
            }
        ));
        tblBatch.setGridColor(new java.awt.Color(204, 204, 204));
        tblBatch.setIntercellSpacing(new java.awt.Dimension(5, 5));
        tblBatch.setRowHeight(25);
        tblBatch.setSelectionBackground(new java.awt.Color(101, 52, 172));
        tblBatch.setShowVerticalLines(false);
        tblBatch.getTableHeader().setReorderingAllowed(false);
        tblBatch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBatchMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBatch);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 1050, 140));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Course ID    :");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Batch ID      :");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Batch NO     :");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        txtbno.setBackground(new java.awt.Color(53, 63, 89));
        txtbno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtbno.setForeground(new java.awt.Color(255, 255, 255));
        txtbno.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jPanel1.add(txtbno, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 880, 30));

        txtbid.setBackground(new java.awt.Color(53, 63, 89));
        txtbid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtbid.setForeground(new java.awt.Color(255, 255, 255));
        txtbid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        jPanel1.add(txtbid, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 880, 30));

        cmbCID.setBackground(new java.awt.Color(53, 63, 89));
        cmbCID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbCID.setForeground(new java.awt.Color(255, 255, 255));
        cmbCID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        cmbCID.setDoubleBuffered(true);
        jPanel1.add(cmbCID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 880, -1));

        btnsubmit.setText("Submit");
        btnsubmit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnsubmit.setkAllowGradient(false);
        btnsubmit.setkBackGroundColor(new java.awt.Color(11, 182, 83));
        btnsubmit.setkHoverColor(new java.awt.Color(9, 135, 62));
        btnsubmit.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });
        jPanel1.add(btnsubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 1020, -1));

        btndelete.setText("Delete");
        btndelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btndelete.setkAllowGradient(false);
        btndelete.setkBackGroundColor(new java.awt.Color(11, 182, 83));
        btndelete.setkHoverColor(new java.awt.Color(9, 135, 62));
        btndelete.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 670, 100, 40));

        btnupdate.setText("Update");
        btnupdate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnupdate.setkAllowGradient(false);
        btnupdate.setkBackGroundColor(new java.awt.Color(11, 182, 83));
        btnupdate.setkHoverColor(new java.awt.Color(9, 135, 62));
        btnupdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 670, 120, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1115, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed
        if (checkBID()) {
            if (chechAllField()) {
                Batch b1 = new Batch(
                        txtbid.getText(),
                        txtbno.getText(),
                        cmbCID.getSelectedItem().toString()
                );

                try {
                    if (new BatchFormController().uploadBatch(b1)) {
                        JOptionPane.showMessageDialog(null, "Saved");
                        tableLoad();
                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(BatchForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnsubmitActionPerformed

    private void tblBatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBatchMouseClicked
        txtbid.setEditable(false);
        int r = tblBatch.getSelectedRow();
        bid = tblBatch.getValueAt(r, 0).toString();
        String bno = tblBatch.getValueAt(r, 1).toString();
        String cid = tblBatch.getValueAt(r, 2).toString();

        txtbid.setText(bid);
        txtbno.setText(bno);
        cmbCID.setSelectedItem(cid);
    }//GEN-LAST:event_tblBatchMouseClicked

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        updateBatch();
        tableLoad();
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        deleteBatch();
        tableLoad();
    }//GEN-LAST:event_btndeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btndelete;
    private keeptoo.KButton btnsubmit;
    private keeptoo.KButton btnupdate;
    private javax.swing.JComboBox<String> cmbCID;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel lblTotalbatch;
    private javax.swing.JTable tblBatch;
    private javax.swing.JTextField txtbid;
    private javax.swing.JTextField txtbno;
    // End of variables declaration//GEN-END:variables

    private void tableLoad() {

        try {
            List<Batch> list = new BatchFormController().loadTable();
            DefaultTableModel model = (DefaultTableModel) tblBatch.getModel();
            model.setRowCount(0);
            list.forEach((OBJ) -> {
                model.addRow(new Object[]{OBJ.getBid(), OBJ.getBno(), OBJ.getCid()

                });
            });
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BatchForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void batchCount() {
        try {
            int count = new BatchFormController().getBatchCount();
            lblTotalbatch.setText(String.valueOf(count));
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BatchForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void selectCid() {
        try {
            ResultSet rs = new BatchFormController().selectCid();
            while (rs.next()) {
                cmbCID.addItem(rs.getString(1));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BatchForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void deleteBatch() {
        if (checkprivilege()) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Please Note That!\n\n"
                    + "if you delete batch, delete All data for student registration\n"
                    + "please consider that!\n\n"
                    + "Are you sure want to delete?");
            if (showConfirmDialog == 0) {
                try {
                    if (new BatchFormController().deleteBatch(bid)) {
                        JOptionPane.showMessageDialog(null, "Successfuly Deleted");
                    } else {
                        JOptionPane.showMessageDialog(null, "Something went wrong!");
                    }

                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(BatchForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void updateBatch() {
        if (checkprivilege()) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Are you sure want to Update?");
            if (showConfirmDialog == 0) {
                try {
                    Batch b1 = new Batch(
                            txtbid.getText(),
                            txtbno.getText(),
                            cmbCID.getSelectedItem().toString()
                    );

                    if (new BatchFormController().updateBatch(b1)) {

                        JOptionPane.showMessageDialog(null, "Successfully Updated");
                    } else {
                        JOptionPane.showMessageDialog(null, "Something went wrong!");
                    }

                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(BatchForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void setUI() {
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        tblBatch.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        tblBatch.getTableHeader().setOpaque(false);
        tblBatch.getTableHeader().setBackground(new Color(32, 136, 203));
        tblBatch.getTableHeader().setForeground(new Color(255, 255, 255));
        tblBatch.getTableHeader().setBorder(new LineBorder(Color.white));
        tblBatch.setRowHeight(30);
        jScrollPane1.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        cmbCID.setUI(ColorArrowUI.createUI(cmbCID));
    }

    private boolean chechAllField() {
        if (!"".equals(txtbid.getText())) {
            if (!"".equals(txtbno.getText())) {
                return true;
            } else {
                JOptionPane.showMessageDialog(null, "Please Fill Batch NO");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please Fill Batch ID");
            return false;
        }
    }

    private void addBid() {
        try {
            String bid1 = new BatchFormController().getBid();
            bid1 = bid1.replaceAll("B", "");
            int id = Integer.parseInt(bid1);
            id = ++id;
            if (id < 10) {
                txtbid.setText(String.valueOf("B00" + id));

            } else if (id < 100) {
                txtbid.setText(String.valueOf("B0" + id));
            } else {
                txtbid.setText(String.valueOf("B" + id));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddStudentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addBno() {
        try {
            int bno = new BatchFormController().getBno();
            bno = ++bno;
            if (bno < 10) {
                txtbno.setText(String.valueOf("0" + bno));

            } else {
                txtbno.setText(String.valueOf(bno));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddStudentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean checkprivilege() {
        try {
            switch (privilege) {
                case "SC":
                    JOptionPane.showMessageDialog(null, "Access Denied - You don't have permission to access");
                    return false;
                case "EC":
                    JOptionPane.showMessageDialog(null, "Access Denied - You don't have permission to access");
                    return false;
                default:
                    return true;
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Access Denied - You don't have permission to access");
            return false;
        }
    }

    private boolean checkBID() {
        try {

            ResultSet rs = new BatchFormController().checkBid();
            while (rs.next()) {
                if (rs.getString(1).equals(txtbid.getText())) {
                    JOptionPane.showMessageDialog(null, "Duplicate ID. please set another ID");
                    return false;
                }
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(SubjectForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return true;
    }

}
